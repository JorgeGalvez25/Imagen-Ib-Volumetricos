unit DmSrv_Invk;

{----------------------------------------------------------------------------}
{ This unit was automatically generated by the RemObjects SDK after reading  }
{ the RODL file associated with this project .                               }
{                                                                            }
{ Do not modify this unit manually, or your changes will be lost when this   }
{ unit is regenerated the next time you compile the project.                 }
{----------------------------------------------------------------------------}

{$I Remobjects.inc}

interface

uses
  {vcl:} Classes,
  {RemObjects:} uROXMLIntf, uROServer, uROServerIntf, uROTypes, uROClientIntf,
  {Generated:} DmSrv_Intf;

type
  TSrvDispensarios_Invoker = class(TROInvoker)
  private
  protected
  published
    procedure Invoke_DameDispensarios(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_EjecutaComando(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_ResultadoComando(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
  end;

implementation

uses
  {RemObjects:} uRORes, uROClient;

{ TSrvDispensarios_Invoker }

procedure TSrvDispensarios_Invoker.Invoke_DameDispensarios(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function DameDispensarios: String; }
var
  lResult: String;
begin
  try
    lResult := (__Instance as ISrvDispensarios).DameDispensarios;

    __Message.InitializeResponseMessage(__Transport, 'DmSrv', 'SrvDispensarios', 'DameDispensariosResponse');
    __Message.Write('Result', TypeInfo(String), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TSrvDispensarios_Invoker.Invoke_EjecutaComando(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function EjecutaComando(const xCmnd: String): Integer; }
var
  xCmnd: String;
  lResult: Integer;
begin
  try
    __Message.Read('xCmnd', TypeInfo(String), xCmnd, []);

    lResult := (__Instance as ISrvDispensarios).EjecutaComando(xCmnd);

    __Message.InitializeResponseMessage(__Transport, 'DmSrv', 'SrvDispensarios', 'EjecutaComandoResponse');
    __Message.Write('Result', TypeInfo(Integer), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TSrvDispensarios_Invoker.Invoke_ResultadoComando(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function ResultadoComando(const xFolio: Integer): String; }
var
  xFolio: Integer;
  lResult: String;
begin
  try
    __Message.Read('xFolio', TypeInfo(Integer), xFolio, []);

    lResult := (__Instance as ISrvDispensarios).ResultadoComando(xFolio);

    __Message.InitializeResponseMessage(__Transport, 'DmSrv', 'SrvDispensarios', 'ResultadoComandoResponse');
    __Message.Write('Result', TypeInfo(String), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

initialization
end.
